[{"C:\\Code\\react3D\\src\\index.js":"1","C:\\Code\\react3D\\src\\App.js":"2"},{"size":149,"mtime":1610402939077,"results":"3","hashOfConfig":"4"},{"size":1190,"mtime":1610402939060,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"19pt77w",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Code\\react3D\\src\\index.js",[],["12","13"],"C:\\Code\\react3D\\src\\App.js",["14"],"import React from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { OrbitControls, Stars } from \"drei\";\r\nimport { Physics, usePlane, useBox } from \"use-cannon\";\r\nimport \"./styles.css\";\r\n\r\nfunction Box(props) {\r\n  const [ref, api] = useBox(() => ({ mass: 1, position: [0, 2, 0] }));\r\n  return (\r\n    <mesh\r\n      onClick={() => {\r\n        api.velocity.set(0, 2, 0);\r\n      }}\r\n      ref={ref}\r\n      position={[0, 2, 0]}\r\n    >\r\n      <boxBufferGeometry attach=\"geometry\" />\r\n      <meshLambertMaterial attach=\"material\" color=\"hotpink\" />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nfunction Plane(props) {\r\n  const [ref] = usePlane(() => ({\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n  }));\r\n  return (\r\n    <mesh rotation={[-Math.PI / 2, 0, 0]}>\r\n      <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n      <meshLambertMaterial attach=\"material\" color=\"lightblue\" />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Canvas>\r\n      <OrbitControls />\r\n      <Stars />\r\n      <ambientLight intensity={0.5} />\r\n      <spotLight position={[10, 15, 10]} angle={0.3} />\r\n      <Physics>\r\n        <Box />\r\n        <Plane />\r\n      </Physics>\r\n    </Canvas>\r\n  );\r\n}\r\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":24,"column":10,"nodeType":"21","messageId":"22","endLine":24,"endColumn":13},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"no-unused-vars","'ref' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]